apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.example.template"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {


    //APP DEPENDENCIES
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "com.google.android.material:material:$material_version"


    //TESTS
    //junit
    testImplementation "junit:junit:$junit_version"
    //espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"


    //DEBUG
    //Facebook Stetho
    implementation "com.facebook.stetho:stetho:$stetho_version"


    //ANDROIDX VIEW
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayout_version"


    //NETWORK & DB
    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    // okhttp-logging-interceptor
    implementation("com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version")
    //Room
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"


    //KOTLIN
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"


    //BINDING
    //Dagger 2
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"


    //MVVM
    //Live Data
    implementation "androidx.lifecycle:lifecycle-extensions:$live_data_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$live_data_version"
    //androidX fragment
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    //Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_fragment_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_fragment_version"



    //Internal Libraries
    implementation project(path: ':CustomWidgets')

}
